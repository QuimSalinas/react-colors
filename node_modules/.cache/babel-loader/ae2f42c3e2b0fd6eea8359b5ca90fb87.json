{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\src\\\\PaletteFormNav.js\";\nimport React, { Component } from 'react';\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from \"@material-ui/core/Button\";\nimport ColorPicker from './ColorPicker';\nimport DraggableColorList from \"./DraggableColorList\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nimport { Link } from \"react-router-dom\";\nimport { arrayMove } from \"react-sortable-hoc\";\n\nclass PaletteFormNav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPaletteName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isPaletteNameUnique', value => {\n      return this.props.palettes.every(({\n        paletteName\n      }) => paletteName !== this.state.newPaletteName);\n    });\n  }\n\n  render() {\n    const {\n      classes,\n      open\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(AppBar, {\n      color: \"default\",\n      position: \"fixed\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: !open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.handleDrawerOpen,\n      className: classNames(classes.menuButton, open && classes.hide),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"Persistent drawer\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"Go Back\")), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      value: this.state.newPaletteName,\n      name: \"newPaletteName\",\n      label: \"Palette Name\",\n      onChange: this.handleChange,\n      validators: ['required', 'isPaletteNameUnique'],\n      errorMessages: ['Enter a color name', 'Name already used'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"Save Palette\")))));\n  }\n\n}\n\nexport default PaletteFormNav;","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/PaletteFormNav.js"],"names":["React","Component","classNames","withStyles","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","Button","ColorPicker","DraggableColorList","ValidatorForm","TextValidator","Link","arrayMove","PaletteFormNav","constructor","props","state","newPaletteName","componentDidMount","addValidationRule","value","palettes","every","paletteName","render","classes","open","appBar","appBarShift","handleDrawerOpen","menuButton","hide","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ColorPicker from './ColorPicker';\r\nimport DraggableColorList from \"./DraggableColorList\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport {Link} from \"react-router-dom\";\r\nimport {arrayMove} from \"react-sortable-hoc\";\r\n\r\nclass PaletteFormNav extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            newPaletteName: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // custom rule will have name 'isPasswordMatch'\r\n        ValidatorForm.addValidationRule('isPaletteNameUnique', (value) => {\r\n          return this.props.palettes.every(({paletteName}) => paletteName !== this.state.newPaletteName)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {classes, open} = this.props;\r\n        return (\r\n            <div>\r\n                <CssBaseline />\r\n                <AppBar\r\n                color=\"default\"\r\n                position='fixed'\r\n                className={classNames(classes.appBar, {\r\n                    [classes.appBarShift]: open\r\n                })}\r\n                >\r\n                <Toolbar disableGutters={!open}>\r\n                    <IconButton\r\n                    color='inherit'\r\n                    aria-label='Open drawer'\r\n                    onClick={this.handleDrawerOpen}\r\n                    className={classNames(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                    <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant='h6' color='inherit' noWrap>\r\n                    Persistent drawer\r\n                    </Typography>\r\n                    <Link to=\"/\">\r\n                        <Button variant=\"contained\" color=\"secondary\">Go Back</Button>\r\n                    </Link>\r\n                    <ValidatorForm onSubmit={this.handleSubmit}>\r\n                        <TextValidator\r\n                            value={this.state.newPaletteName}\r\n                            name=\"newPaletteName\"\r\n                            label=\"Palette Name\"\r\n                            onChange={this.handleChange}\r\n                            validators={['required','isPaletteNameUnique']}\r\n                            errorMessages={['Enter a color name','Name already used']}    \r\n                        />\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">Save Palette</Button>\r\n                    </ValidatorForm>  \r\n                </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaletteFormNav;"]},"metadata":{},"sourceType":"module"}