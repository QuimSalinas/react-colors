{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\src\\\\colorBox.js\";\nimport React, { Component } from 'react';\nimport './colorBox.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from \"react-router-dom\";\nimport chroma from \"chroma-js\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  copyText: {\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.5)\" : \"white\"\n  },\n  colorName: {\n    color: props => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"rgba(0,0,0,0.5)\"\n  },\n  seeMore: {\n    color: props => chroma(props.background).luminance() >= 0.5 ? \"rgba(0,0,0,0.5)\" : \"white\",\n    backgroundColor: \"rgba(255,255,255,0.3)\",\n    position: \"absolute\",\n    border: \"none\",\n    right: \"0px\",\n    bottom: \"0px\",\n    width: \"60px\",\n    height: \"30px\",\n    textAlign: \"center\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\"\n  },\n  copyButton: {\n    color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.5)\" : \"white\",\n    cursor: \"pointer\",\n    width: \"100px\",\n    height: \"30px\",\n    position: \"absolute\",\n    display: \"inline-block\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: \"-15px\",\n    marginLeft: \"-50px\",\n    textAlign: \"center\",\n    outline: \"none\",\n    backgroundColor: \"rgba(255,255,255,0.3)\",\n    fontSize: \"1rem\",\n    lineHeight: \"30px\",\n    textTransform: \"uppercase\",\n    border: \"none\",\n    textDecoration: \"none\"\n  }\n};\n\nclass colorBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCopyState = () => {\n      this.setState({\n        copied: true\n      }, () => {\n        setTimeout(() => this.setState({\n          copied: false\n        }), 1500);\n        this.props.deactivateOverflow(2200);\n      });\n    };\n\n    this.state = {\n      copied: false\n    };\n  }\n\n  render() {\n    const {\n      name,\n      background,\n      paletteId,\n      colorId,\n      showLink,\n      classes\n    } = this.props;\n    const isDarkColor = chroma(background).luminance() <= 0.08;\n    const isLightColor = chroma(background).luminance() >= 0.5;\n    return /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.changeCopyState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ColorBox\",\n      style: {\n        background: background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background\n      },\n      className: `copy-overlay ${this.state.copied && \"show\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `copy-msg ${this.state.copied && \"show\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Copied!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.copyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, this.props.background)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"copy-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.colorName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.copyButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Copy\")), showLink && /*#__PURE__*/React.createElement(Link, {\n      to: `/palette/${paletteId}/${colorId}`,\n      onClick: e => e.stopPropagation(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.seeMore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, \"More\"))));\n  }\n\n}\n\ncolorBox.defaultProps = {\n  showLink: true\n};\nexport default withStyles(styles)(colorBox);","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/colorBox.js"],"names":["React","Component","CopyToClipboard","Link","chroma","withStyles","styles","copyText","color","props","background","luminance","colorName","seeMore","backgroundColor","position","border","right","bottom","width","height","textAlign","lineHeight","textTransform","copyButton","cursor","display","top","left","marginTop","marginLeft","outline","fontSize","textDecoration","colorBox","constructor","changeCopyState","setState","copied","setTimeout","deactivateOverflow","state","render","name","paletteId","colorId","showLink","classes","isDarkColor","isLightColor","e","stopPropagation","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport  './colorBox.css';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {Link} from \"react-router-dom\"\r\nimport chroma from \"chroma-js\"\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n    copyText: {\r\n        color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.5)\" : \"white\"\r\n    },\r\n    colorName: {\r\n        color: props => chroma(props.background).luminance() <= 0.08 ? \"white\" : \"rgba(0,0,0,0.5)\"\r\n    },\r\n    seeMore: {\r\n        color: props => chroma(props.background).luminance() >= 0.5 ? \"rgba(0,0,0,0.5)\":\"white\",\r\n        backgroundColor: \"rgba(255,255,255,0.3)\",\r\n        position: \"absolute\",\r\n        border: \"none\",\r\n        right: \"0px\",\r\n        bottom: \"0px\",\r\n        width: \"60px\",\r\n        height: \"30px\",\r\n        textAlign: \"center\",\r\n        lineHeight: \"30px\",\r\n        textTransform: \"uppercase\"\r\n    },\r\n    copyButton: {\r\n        color: props => chroma(props.background).luminance() >= 0.7 ? \"rgba(0,0,0,0.5)\":\"white\",\r\n        cursor: \"pointer\",\r\n        width: \"100px\",\r\n        height: \"30px\",\r\n        position: \"absolute\",\r\n        display: \"inline-block\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        marginTop: \"-15px\",\r\n        marginLeft: \"-50px\",\r\n        textAlign: \"center\",\r\n        outline: \"none\",\r\n        backgroundColor: \"rgba(255,255,255,0.3)\",\r\n        fontSize: \"1rem\",\r\n        lineHeight: \"30px\",\r\n        textTransform: \"uppercase\",\r\n        border: \"none\",\r\n        textDecoration: \"none\"\r\n    }\r\n}\r\n\r\nclass colorBox extends Component {\r\n    static defaultProps = {\r\n        showLink: true\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            copied: false\r\n        }\r\n    }\r\n    changeCopyState = () => {\r\n        this.setState({\r\n            copied: true\r\n        }, () => {\r\n            setTimeout(()=>this.setState({copied: false}),1500);\r\n            this.props.deactivateOverflow(2200);\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const {name,background,paletteId,colorId,showLink, classes} = this.props;\r\n        const isDarkColor = chroma(background).luminance() <= 0.08;\r\n        const isLightColor = chroma(background).luminance() >= 0.5;\r\n        return (\r\n            <CopyToClipboard text={background} onCopy={this.changeCopyState}>\r\n                <div className=\"ColorBox\" style={{background: background}}>\r\n                <div style={{background}} className={`copy-overlay ${this.state.copied&&\"show\"}`}/>\r\n                <div className={`copy-msg ${this.state.copied&&\"show\"}`}>\r\n                    <h1>Copied!</h1>\r\n                    <p className={classes.copyText}>{this.props.background}</p>\r\n                </div>\r\n                    <div className=\"copy-container\">\r\n                        <div className=\"box-content\">\r\n                            <span className={classes.colorName}>{name}</span>\r\n                        </div>\r\n                        <button className={classes.copyButton}>Copy</button>\r\n                    </div>\r\n                    {showLink && \r\n                        <Link to={`/palette/${paletteId}/${colorId}`} onClick={(e) => e.stopPropagation()}> \r\n                            <span className={classes.seeMore}>More</span>\r\n                        </Link>    \r\n                    }\r\n                </div>\r\n            </CopyToClipboard>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(colorBox);"]},"metadata":{},"sourceType":"module"}