{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import chroma from\"chroma-js\";var levels=[50,100,200,300,400,500,600,700,800,900];function generatePalette(starterPalette){var newPalette=_objectSpread({},starterPalette);newPalette.colors={};var _iterator=_createForOfIteratorHelper(levels),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var level=_step.value;newPalette.colors[level]=[];}}catch(err){_iterator.e(err);}finally{_iterator.f();}var _iterator2=_createForOfIteratorHelper(starterPalette.colors),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var color=_step2.value;var scale=getScale(color.color,10).reverse();for(var i in scale){newPalette.colors[levels[i]].push({name:\"\".concat(color.name,\" \").concat(levels[i]),id:color.name.toLowerCase().replace(/ /g,\"-\"),hex:scale[i],rgb:chroma(scale[i]).css(),rgba:chroma(scale[i]).css().replace(\"rgb\",\"rgba\").replace(\")\",\",1.0)\")});}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}return newPalette;}function getRange(hexColor){var end=\"#fff\";return[chroma(hexColor).darken(1.4).hex(),hexColor,end];}function getScale(hexColor,numberOfColors){return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);}export{generatePalette};","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/colorHelpers.js"],"names":["chroma","levels","generatePalette","starterPalette","newPalette","colors","level","color","scale","getScale","reverse","i","push","name","id","toLowerCase","replace","hex","rgb","css","rgba","getRange","hexColor","end","darken","numberOfColors","mode"],"mappings":"yXAAA,MAAOA,CAAAA,MAAP,KAAmB,WAAnB,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,EAAD,CAAK,GAAL,CAAU,GAAV,CAAe,GAAf,CAAoB,GAApB,CAAyB,GAAzB,CAA8B,GAA9B,CAAmC,GAAnC,CAAwC,GAAxC,CAA6C,GAA7C,CAAf,CAEA,QAASC,CAAAA,eAAT,CAAyBC,cAAzB,CAAwC,CACpC,GAAIC,CAAAA,UAAU,kBAAOD,cAAP,CAAd,CACAC,UAAU,CAACC,MAAX,CAAoB,EAApB,CAFoC,yCAGnBJ,MAHmB,YAGpC,+CAAwB,IAAhBK,CAAAA,KAAgB,aACpBF,UAAU,CAACC,MAAX,CAAkBC,KAAlB,EAAyB,EAAzB,CACH,CALmC,+FAMnBH,cAAc,CAACE,MANI,aAMpC,kDAAuC,IAA/BE,CAAAA,KAA+B,cACnC,GAAIC,CAAAA,KAAK,CAAGC,QAAQ,CAACF,KAAK,CAACA,KAAP,CAAc,EAAd,CAAR,CAA0BG,OAA1B,EAAZ,CACA,IAAI,GAAIC,CAAAA,CAAR,GAAaH,CAAAA,KAAb,CAAmB,CACfJ,UAAU,CAACC,MAAX,CAAkBJ,MAAM,CAACU,CAAD,CAAxB,EAA6BC,IAA7B,CAAkC,CAC9BC,IAAI,WAAKN,KAAK,CAACM,IAAX,aAAmBZ,MAAM,CAACU,CAAD,CAAzB,CAD0B,CAE9BG,EAAE,CAAEP,KAAK,CAACM,IAAN,CAAWE,WAAX,GAAyBC,OAAzB,CAAiC,IAAjC,CAAuC,GAAvC,CAF0B,CAG9BC,GAAG,CAAET,KAAK,CAACG,CAAD,CAHoB,CAI9BO,GAAG,CAAElB,MAAM,CAACQ,KAAK,CAACG,CAAD,CAAN,CAAN,CAAiBQ,GAAjB,EAJyB,CAK9BC,IAAI,CAAEpB,MAAM,CAACQ,KAAK,CAACG,CAAD,CAAN,CAAN,CAAiBQ,GAAjB,GAAuBH,OAAvB,CAA+B,KAA/B,CAAsC,MAAtC,EAA8CA,OAA9C,CAAsD,GAAtD,CAA0D,OAA1D,CALwB,CAAlC,EAOH,CACJ,CAjBmC,uDAkBpC,MAAOZ,CAAAA,UAAP,CACH,CAED,QAASiB,CAAAA,QAAT,CAAkBC,QAAlB,CAA2B,CACvB,GAAMC,CAAAA,GAAG,CAAG,MAAZ,CACA,MAAO,CACHvB,MAAM,CAACsB,QAAD,CAAN,CACKE,MADL,CACY,GADZ,EAEKP,GAFL,EADG,CAIHK,QAJG,CAKHC,GALG,CAAP,CAOH,CAED,QAASd,CAAAA,QAAT,CAAkBa,QAAlB,CAA4BG,cAA5B,CAA2C,CACvC,MAAOzB,CAAAA,MAAM,CAACQ,KAAP,CAAaa,QAAQ,CAACC,QAAD,CAArB,EAAiCI,IAAjC,CAAsC,KAAtC,EAA6CrB,MAA7C,CAAoDoB,cAApD,CAAP,CACH,CAED,OAAQvB,eAAR","sourcesContent":["import chroma from \"chroma-js\";\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette){\r\n    let newPalette = {...starterPalette};\r\n    newPalette.colors = {};\r\n    for(let level of levels){\r\n        newPalette.colors[level]=[];\r\n    } \r\n    for(let color of starterPalette.colors){\r\n        let scale = getScale(color.color, 10).reverse();\r\n        for(let i in scale){\r\n            newPalette.colors[levels[i]].push({\r\n                name: `${color.name} ${levels[i]}`,\r\n                id: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n                hex: scale[i],\r\n                rgb: chroma(scale[i]).css(),\r\n                rgba: chroma(scale[i]).css().replace(\"rgb\", \"rgba\").replace(\")\",\",1.0)\")\r\n            });\r\n        }\r\n    }\r\n    return newPalette;\r\n}\r\n\r\nfunction getRange(hexColor){\r\n    const end = \"#fff\";\r\n    return [\r\n        chroma(hexColor)\r\n            .darken(1.4)\r\n            .hex(),\r\n        hexColor,\r\n        end\r\n    ];\r\n}\r\n\r\nfunction getScale(hexColor, numberOfColors){\r\n    return chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\r\n}\r\n\r\nexport {generatePalette};"]},"metadata":{},"sourceType":"module"}