{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import classNames from\"classnames\";import{withStyles}from\"@material-ui/core/styles\";import Drawer from\"@material-ui/core/Drawer\";import Typography from\"@material-ui/core/Typography\";import Divider from\"@material-ui/core/Divider\";import IconButton from\"@material-ui/core/IconButton\";import ChevronLeftIcon from\"@material-ui/icons/ChevronLeft\";import Button from\"@material-ui/core/Button\";import ColorPicker from'./ColorPicker';import DraggableColorList from\"./DraggableColorList\";import PaletteFormNav from\"./PaletteFormNav\";import styles from\"./styles/NewPaletteformStyles\";import{DRAWER_WIDTH}from\"./constants\";import seedColors from\"./seedColors\";var drawerWidth=DRAWER_WIDTH;var arrayMove=require('array-move');var NewPaletteForm=/*#__PURE__*/function(_Component){_inherits(NewPaletteForm,_Component);var _super=_createSuper(NewPaletteForm);function NewPaletteForm(props){var _this;_classCallCheck(this,NewPaletteForm);_this=_super.call(this,props);_this.handleDrawerOpen=function(){_this.setState({open:true});};_this.handleDrawerClose=function(){_this.setState({open:false});};_this.addNewColor=function(newColor){_this.setState({colors:[].concat(_toConsumableArray(_this.state.colors),[newColor])});};_this.handleChange=function(evt){_this.setState(_defineProperty({},evt.target.name,evt.target.value));};_this.handleSubmit=function(newPalette){newPalette.id=newPalette.paletteName.toLowerCase().replace(/\\s/g,\"-\");newPalette.colors=_this.state.colors;_this.props.savePalette(newPalette);_this.props.history.push(\"/\");};_this.removeColor=function(colorName){_this.setState({colors:_this.state.colors.filter(function(color){return color.name!==colorName;})});};_this.onSortEnd=function(_ref){var oldIndex=_ref.oldIndex,newIndex=_ref.newIndex;_this.setState(function(_ref2){var colors=_ref2.colors;return{colors:arrayMove(colors,oldIndex,newIndex)};});};_this.clearColors=function(){_this.setState({colors:[]});};_this.addRandomColor=function(){var isDuplicateColor=true;var allColors=_this.props.palettes.map(function(p){return p.colors;}).flat();var rand=Math.floor(Math.random()*allColors.length);var randomColor=allColors[rand];var _loop=function _loop(){rand=Math.floor(Math.random()*allColors.length);randomColor=allColors[rand];var randomColorName=randomColor.name;isDuplicateColor=_this.state.colors.some(function(color){return color.name===randomColorName;});};while(isDuplicateColor){_loop();}_this.setState({colors:[].concat(_toConsumableArray(_this.state.colors),[randomColor])});};_this.state={open:true,colors:seedColors[0].colors};return _this;}_createClass(NewPaletteForm,[{key:\"render\",value:function render(){var _this$props=this.props,classes=_this$props.classes,maxColors=_this$props.maxColors,palettes=_this$props.palettes;var _this$state=this.state,open=_this$state.open,colors=_this$state.colors;var paletteFull=colors.length>=maxColors;return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(PaletteFormNav,{open:open,palettes:palettes,handleSubmit:this.handleSubmit,handleDrawerOpen:this.handleDrawerOpen,drawerWidth:drawerWidth}),/*#__PURE__*/React.createElement(Drawer,{className:classes.drawer,variant:\"persistent\",anchor:\"left\",open:open,classes:{paper:classes.drawerPaper}},/*#__PURE__*/React.createElement(\"div\",{className:classes.drawerHeader},/*#__PURE__*/React.createElement(IconButton,{onClick:this.handleDrawerClose},/*#__PURE__*/React.createElement(ChevronLeftIcon,null))),/*#__PURE__*/React.createElement(Divider,null),/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(Typography,{className:classes.title,variant:\"h4\",gutterBottom:true},\"Design Your Palette\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttons},/*#__PURE__*/React.createElement(Button,{variant:\"contained\",className:classes.button,color:\"secondary\",onClick:this.clearColors},\"Clear Palette\"),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",className:classes.button,color:\"primary\",onClick:this.addRandomColor,disabled:paletteFull},\"Random Color\")),/*#__PURE__*/React.createElement(ColorPicker,{initialColor:\"teal\",addNewColor:this.addNewColor,paletteFull:paletteFull,colors:this.state.colors}))),/*#__PURE__*/React.createElement(\"main\",{className:classNames(classes.content,_defineProperty({},classes.contentShift,open))},/*#__PURE__*/React.createElement(\"div\",{className:classes.drawerHeader}),/*#__PURE__*/React.createElement(DraggableColorList,{onSortEnd:this.onSortEnd,axis:\"xy\",colors:colors,removeColor:this.removeColor})));}}]);return NewPaletteForm;}(Component);export default withStyles(styles,{withTheme:true})(NewPaletteForm);","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/NewPaletteForm.js"],"names":["React","Component","classNames","withStyles","Drawer","Typography","Divider","IconButton","ChevronLeftIcon","Button","ColorPicker","DraggableColorList","PaletteFormNav","styles","DRAWER_WIDTH","seedColors","drawerWidth","arrayMove","require","NewPaletteForm","props","handleDrawerOpen","setState","open","handleDrawerClose","addNewColor","newColor","colors","state","handleChange","evt","target","name","value","handleSubmit","newPalette","id","paletteName","toLowerCase","replace","savePalette","history","push","removeColor","colorName","filter","color","onSortEnd","oldIndex","newIndex","clearColors","addRandomColor","isDuplicateColor","allColors","palettes","map","p","flat","rand","Math","floor","random","length","randomColor","randomColorName","some","classes","maxColors","paletteFull","root","drawer","paper","drawerPaper","drawerHeader","container","title","buttons","button","content","contentShift","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ColorPicker from './ColorPicker';\r\nimport DraggableColorList from \"./DraggableColorList\";\r\nimport PaletteFormNav from \"./PaletteFormNav\";\r\nimport styles from \"./styles/NewPaletteformStyles\";\r\nimport {DRAWER_WIDTH} from \"./constants\";\r\nimport seedColors from \"./seedColors\";\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\nconst arrayMove = require('array-move');\r\n\r\nclass NewPaletteForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      open: true,\r\n      colors: seedColors[0].colors,\r\n    }\r\n  }\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  addNewColor = (newColor) =>{\r\n    this.setState({colors: [...this.state.colors, newColor]})\r\n  }\r\n\r\n  handleChange = (evt) =>{\r\n    this.setState({[evt.target.name]: evt.target.value})\r\n  } \r\n\r\n  handleSubmit = (newPalette) =>{\r\n    newPalette.id=newPalette.paletteName.toLowerCase().replace(/\\s/g,\"-\");\r\n    newPalette.colors=this.state.colors;\r\n    this.props.savePalette(newPalette);\r\n    this.props.history.push(\"/\");\r\n  }\r\n  \r\n  removeColor = (colorName)=>{\r\n    this.setState({colors: this.state.colors.filter(color=>color.name!==colorName)});\r\n  }\r\n\r\n  onSortEnd = ({oldIndex, newIndex}) => {\r\n    this.setState(({colors}) => ({\r\n      colors: arrayMove(colors, oldIndex, newIndex),\r\n    }));\r\n  };\r\n\r\n  clearColors = () =>{\r\n    this.setState({colors: []})\r\n  }\r\n\r\n  addRandomColor = () =>{\r\n    let isDuplicateColor = true;\r\n    const allColors = this.props.palettes.map(p=>p.colors).flat();\r\n    let rand = Math.floor(Math.random()*allColors.length);\r\n    let randomColor = allColors[rand];\r\n    while(isDuplicateColor){\r\n      rand = Math.floor(Math.random()*allColors.length);\r\n      randomColor = allColors[rand];\r\n      let randomColorName = randomColor.name;\r\n      isDuplicateColor = this.state.colors.some(color=>color.name===randomColorName)\r\n    }\r\n    this.setState({colors: [...this.state.colors, randomColor]})\r\n  }\r\n\r\n  render() {\r\n    const { classes, maxColors, palettes } = this.props;\r\n    const { open, colors } = this.state;\r\n    const paletteFull = colors.length>=maxColors;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <PaletteFormNav open={open}\r\n                        \r\n                        palettes={palettes}\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleDrawerOpen={this.handleDrawerOpen}\r\n                        drawerWidth={drawerWidth}/>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <div className={classes.container}>\r\n            <Typography className={classes.title} variant=\"h4\" gutterBottom>Design Your Palette</Typography>\r\n            <div className={classes.buttons}>\r\n              <Button variant=\"contained\"\r\n                      className={classes.button} \r\n                      color=\"secondary\"\r\n                      onClick={this.clearColors}>\r\n                        Clear Palette\r\n              </Button>\r\n              <Button variant=\"contained\" \r\n                      className={classes.button} \r\n                      color=\"primary\"\r\n                      onClick={this.addRandomColor}\r\n                      disabled={paletteFull}>\r\n                        Random Color\r\n              </Button>\r\n            </div>\r\n            <ColorPicker  initialColor=\"teal\" \r\n                          addNewColor={this.addNewColor}\r\n                          paletteFull={paletteFull}\r\n                          colors={this.state.colors}/>\r\n          </div>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          <DraggableColorList \r\n                onSortEnd={this.onSortEnd}\r\n                axis=\"xy\"\r\n                colors={colors} \r\n                removeColor={this.removeColor}/>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);"]},"metadata":{},"sourceType":"module"}