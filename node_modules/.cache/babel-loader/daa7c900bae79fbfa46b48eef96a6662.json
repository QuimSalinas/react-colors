{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\src\\\\NewPaletteForm.js\";\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport Button from \"@material-ui/core/Button\";\nimport ColorPicker from './ColorPicker';\nimport { colors } from \"@material-ui/core\";\nimport DraggableColorBox from \"./DraggableColorBox\";\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\nconst drawerWidth = 400;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    height: \"calc(100vh - 64px)\",\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  }\n});\n\nclass NewPaletteForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDrawerOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleDrawerClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.colorChanged = color => {\n      this.setState({\n        currentColor: `rgba(${color.rgb.r},${color.rgb.g},${color.rgb.b},${color.rgb.a})`\n      });\n    };\n\n    this.addNewColor = () => {\n      const newColor = {\n        color: this.state.currentColor,\n        name: this.state.newColorName\n      };\n      this.setState({\n        colors: [...this.state.colors, newColor],\n        newColorName: \"\"\n      });\n    };\n\n    this.handleChange = evt => {\n      this.setState({\n        [evt.target.name]: evt.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      const newPalette = {\n        paletteName: this.state.newPaletteName,\n        colors: this.state.colors,\n        id: this.state.newPaletteName.toLowerCase().replace(/\\s/g, \"-\")\n      };\n      this.props.savePalette(newPalette);\n      this.props.history.push(\"/\");\n    };\n\n    this.state = {\n      open: true,\n      currentColor: \"teal\",\n      colors: [],\n      newColorName: \"\",\n      newPaletteName: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // custom rule will have name 'isPasswordMatch'\n    ValidatorForm.addValidationRule('isColorNameUnique', value => {\n      return this.state.colors.every(({\n        name\n      }) => name.toLowerCase() !== value.toLowerCase());\n    });\n    ValidatorForm.addValidationRule('isColorUnique', value => {\n      return this.state.colors.every(({\n        color\n      }) => color !== this.state.currentColor);\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      open\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(AppBar, {\n      color: \"default\",\n      position: \"fixed\",\n      className: classNames(classes.appBar, {\n        [classes.appBarShift]: open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      disableGutters: !open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"Open drawer\",\n      onClick: this.handleDrawerOpen,\n      className: classNames(classes.menuButton, open && classes.hide),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MenuIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"inherit\",\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, \"Persistent drawer\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, \"Go Back\"), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      value: this.state.newPaletteName,\n      name: \"newPaletteName\",\n      label: \"Palette Name\",\n      onChange: this.handleChange,\n      validators: ['required'],\n      errorMessages: ['Enter a color name'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, \"Save Palette\")))), /*#__PURE__*/React.createElement(Drawer, {\n      className: classes.drawer,\n      variant: \"persistent\",\n      anchor: \"left\",\n      open: open,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.handleDrawerClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, \"Design Your Palette\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Clear Palette\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Random Color\")), /*#__PURE__*/React.createElement(ColorPicker, {\n      initialColor: this.state.currentColor,\n      colorChanged: this.colorChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ValidatorForm, {\n      onSubmit: this.addNewColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      name: \"newColorName\",\n      value: this.state.newColorName,\n      onChange: this.handleChange,\n      validators: ['required', 'isColorNameUnique', 'isColorUnique'],\n      errorMessages: ['Enter a color name', 'Color Name must be unique', 'Color already used'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        backgroundColor: this.state.currentColor\n      },\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, \"ADD COLOR\"))), /*#__PURE__*/React.createElement(\"main\", {\n      className: classNames(classes.content, {\n        [classes.contentShift]: open\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.drawerHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    }), this.state.colors.map(color => {\n      return /*#__PURE__*/React.createElement(DraggableColorBox, {\n        color: color.color,\n        name: color.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 20\n        }\n      });\n    })));\n  }\n\n}\n\nexport default withStyles(styles, {\n  withTheme: true\n})(NewPaletteForm);","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/NewPaletteForm.js"],"names":["React","Component","classNames","withStyles","Drawer","CssBaseline","AppBar","Toolbar","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","Button","ColorPicker","colors","DraggableColorBox","ValidatorForm","TextValidator","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","height","spacing","contentShift","NewPaletteForm","constructor","props","handleDrawerOpen","setState","open","handleDrawerClose","colorChanged","color","currentColor","rgb","r","g","b","a","addNewColor","newColor","state","name","newColorName","handleChange","evt","target","value","handleSubmit","newPalette","paletteName","newPaletteName","id","toLowerCase","replace","savePalette","history","push","componentDidMount","addValidationRule","every","render","classes","paper","backgroundColor","map","withTheme"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ColorPicker from './ColorPicker';\r\nimport { colors } from \"@material-ui/core\";\r\nimport DraggableColorBox from \"./DraggableColorBox\";\r\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n \r\n\r\nconst drawerWidth = 400;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 20\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"calc(100vh - 64px)\",\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    marginLeft: -drawerWidth\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    }),\r\n    marginLeft: 0\r\n  }\r\n});\r\n\r\nclass NewPaletteForm extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      open: true,\r\n      currentColor: \"teal\",\r\n      colors: [],\r\n      newColorName: \"\",\r\n      newPaletteName: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule('isColorNameUnique', (value) => {\r\n        return this.state.colors.every(({name}) => name.toLowerCase() !== value.toLowerCase())\r\n    });\r\n    ValidatorForm.addValidationRule('isColorUnique', (value) => {\r\n      return this.state.colors.every(({color}) => color !== this.state.currentColor)\r\n  })\r\n}\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  colorChanged = color => {\r\n    this.setState({currentColor: `rgba(${color.rgb.r},${color.rgb.g},${color.rgb.b},${color.rgb.a})`});\r\n  }\r\n\r\n  addNewColor = () =>{\r\n    const newColor={\r\n      color: this.state.currentColor,\r\n      name: this.state.newColorName\r\n    }\r\n    this.setState({colors: [...this.state.colors, newColor], newColorName: \"\"})\r\n  }\r\n\r\n  handleChange = (evt) =>{\r\n    this.setState({[evt.target.name]: evt.target.value})\r\n  } \r\n\r\n  handleSubmit = () =>{\r\n    const newPalette={\r\n        paletteName: this.state.newPaletteName, \r\n        colors: this.state.colors, \r\n        id: this.state.newPaletteName.toLowerCase().replace(/\\s/g,\"-\")\r\n      }\r\n    this.props.savePalette(newPalette);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { open } = this.state;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          color=\"default\"\r\n          position='fixed'\r\n          className={classNames(classes.appBar, {\r\n            [classes.appBarShift]: open\r\n          })}\r\n        >\r\n          <Toolbar disableGutters={!open}>\r\n            <IconButton\r\n              color='inherit'\r\n              aria-label='Open drawer'\r\n              onClick={this.handleDrawerOpen}\r\n              className={classNames(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' color='inherit' noWrap>\r\n              Persistent drawer\r\n            </Typography>\r\n            <Button variant=\"contained\" color=\"secondary\">Go Back</Button>\r\n            <ValidatorForm onSubmit={this.handleSubmit}>\r\n                <TextValidator\r\n                    value={this.state.newPaletteName}\r\n                    name=\"newPaletteName\"\r\n                    label=\"Palette Name\"\r\n                    onChange={this.handleChange}\r\n                    validators={['required']}\r\n                    errorMessages={['Enter a color name']}    \r\n                />\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Save Palette</Button>\r\n            </ValidatorForm>  \r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant='persistent'\r\n          anchor='left'\r\n          open={open}\r\n          classes={{\r\n            paper: classes.drawerPaper\r\n          }}\r\n        >\r\n          <div className={classes.drawerHeader}>\r\n            <IconButton onClick={this.handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <Typography variant=\"h4\">Design Your Palette</Typography>\r\n          <div>\r\n            <Button variant=\"contained\" color=\"secondary\">Clear Palette</Button>\r\n            <Button variant=\"contained\" color=\"primary\">Random Color</Button>\r\n          </div>\r\n          <ColorPicker  initialColor={this.state.currentColor} colorChanged={this.colorChanged}/>\r\n          <ValidatorForm onSubmit={this.addNewColor}>\r\n            <TextValidator\r\n                name=\"newColorName\"\r\n                value={this.state.newColorName}\r\n                onChange={this.handleChange}\r\n                validators={['required','isColorNameUnique', 'isColorUnique']}\r\n                errorMessages={['Enter a color name','Color Name must be unique', 'Color already used']}\r\n            />\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              style={{backgroundColor: this.state.currentColor}}\r\n              type=\"submit\">\r\n                ADD COLOR\r\n            </Button>\r\n          </ValidatorForm>\r\n        </Drawer>\r\n        <main\r\n          className={classNames(classes.content, {\r\n            [classes.contentShift]: open\r\n          })}\r\n        >\r\n          <div className={classes.drawerHeader} />\r\n          {this.state.colors.map(color => {\r\n            return <DraggableColorBox color={color.color} name={color.name}></DraggableColorBox>})\r\n          }\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withStyles(styles, { withTheme: true })(NewPaletteForm);"]},"metadata":{},"sourceType":"module"}