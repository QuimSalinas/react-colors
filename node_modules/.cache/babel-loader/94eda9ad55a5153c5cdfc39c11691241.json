{"ast":null,"code":"import chroma, { hex } from \"chroma-js\";\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\n\nfunction generatePalette(starterPalette) {\n  let newPalette = starterPalette;\n  newPalette.colors = {};\n\n  for (let level of levels) {\n    newPalette.colors[level] = [];\n  }\n\n  console.log(starterPalette.colors);\n\n  for (let color of starterPalette.colors) {\n    let scale = getScale(color.color, 10).reverse();\n\n    for (let i in scale) {\n      newPalette.colors[levels[i]].push({\n        name: `{color.name} ${levels[i]}`,\n        id: color.name.toLowerCase().replace(/ /g, \"-\"),\n        hex: scale[i],\n        rgb: chroma(scale[i]).css()\n      });\n    }\n  }\n}\n\nfunction getRange(hexColor) {\n  const end = \"#fff\";\n  return [chroma(hexColor).darken(1.4).hex(), hexColor, end];\n}\n\nfunction getScale(hexColor, numberOfColors) {\n  chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\n}\n\nexport { generatePalette };","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/colorHelpers.js"],"names":["chroma","hex","levels","generatePalette","starterPalette","newPalette","colors","level","console","log","color","scale","getScale","reverse","i","push","name","id","toLowerCase","replace","rgb","css","getRange","hexColor","end","darken","numberOfColors","mode"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,QAA4B,WAA5B;AACA,MAAMC,MAAM,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,CAAf;;AAEA,SAASC,eAAT,CAAyBC,cAAzB,EAAwC;AACpC,MAAIC,UAAU,GAAGD,cAAjB;AACAC,EAAAA,UAAU,CAACC,MAAX,GAAoB,EAApB;;AACA,OAAI,IAAIC,KAAR,IAAiBL,MAAjB,EAAwB;AACpBG,IAAAA,UAAU,CAACC,MAAX,CAAkBC,KAAlB,IAAyB,EAAzB;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYL,cAAc,CAACE,MAA3B;;AACA,OAAI,IAAII,KAAR,IAAiBN,cAAc,CAACE,MAAhC,EAAuC;AACnC,QAAIK,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACA,KAAP,EAAc,EAAd,CAAR,CAA0BG,OAA1B,EAAZ;;AACA,SAAI,IAAIC,CAAR,IAAaH,KAAb,EAAmB;AACfN,MAAAA,UAAU,CAACC,MAAX,CAAkBJ,MAAM,CAACY,CAAD,CAAxB,EAA6BC,IAA7B,CAAkC;AAC9BC,QAAAA,IAAI,EAAG,gBAAed,MAAM,CAACY,CAAD,CAAI,EADF;AAE9BG,QAAAA,EAAE,EAAEP,KAAK,CAACM,IAAN,CAAWE,WAAX,GAAyBC,OAAzB,CAAiC,IAAjC,EAAuC,GAAvC,CAF0B;AAG9BlB,QAAAA,GAAG,EAAEU,KAAK,CAACG,CAAD,CAHoB;AAI9BM,QAAAA,GAAG,EAAEpB,MAAM,CAACW,KAAK,CAACG,CAAD,CAAN,CAAN,CAAiBO,GAAjB;AAJyB,OAAlC;AAMH;AACJ;AACJ;;AAED,SAASC,QAAT,CAAkBC,QAAlB,EAA2B;AACvB,QAAMC,GAAG,GAAG,MAAZ;AACA,SAAO,CACHxB,MAAM,CAACuB,QAAD,CAAN,CACKE,MADL,CACY,GADZ,EAEKxB,GAFL,EADG,EAIHsB,QAJG,EAKHC,GALG,CAAP;AAOH;;AAED,SAASZ,QAAT,CAAkBW,QAAlB,EAA4BG,cAA5B,EAA2C;AACvC1B,EAAAA,MAAM,CAACW,KAAP,CAAaW,QAAQ,CAACC,QAAD,CAArB,EAAiCI,IAAjC,CAAsC,KAAtC,EAA6CrB,MAA7C,CAAoDoB,cAApD;AACH;;AAED,SAAQvB,eAAR","sourcesContent":["import chroma, { hex } from \"chroma-js\";\r\nconst levels = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n\r\nfunction generatePalette(starterPalette){\r\n    let newPalette = starterPalette;\r\n    newPalette.colors = {};\r\n    for(let level of levels){\r\n        newPalette.colors[level]=[];\r\n    } \r\n    console.log(starterPalette.colors);\r\n    for(let color of starterPalette.colors){\r\n        let scale = getScale(color.color, 10).reverse();\r\n        for(let i in scale){\r\n            newPalette.colors[levels[i]].push({\r\n                name: `{color.name} ${levels[i]}`,\r\n                id: color.name.toLowerCase().replace(/ /g, \"-\"),\r\n                hex: scale[i],\r\n                rgb: chroma(scale[i]).css()\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nfunction getRange(hexColor){\r\n    const end = \"#fff\";\r\n    return [\r\n        chroma(hexColor)\r\n            .darken(1.4)\r\n            .hex(),\r\n        hexColor,\r\n        end\r\n    ];\r\n}\r\n\r\nfunction getScale(hexColor, numberOfColors){\r\n    chroma.scale(getRange(hexColor)).mode(\"lab\").colors(numberOfColors);\r\n}\r\n\r\nexport {generatePalette};"]},"metadata":{},"sourceType":"module"}