{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\src\\\\Navbar.js\";\nimport React, { Component } from 'react';\nimport Slider from \"rc-slider\";\nimport 'rc-slider/assets/index.css';\nimport './Navbar.css';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from \"@material-ui/styles\"; //import styles from \"./styles/NavbarStyles\"\n\nconst styles = {\n  navbar: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    height: \"6vh\"\n  },\n  logo: {\n    marginRight: \"50px\",\n    padding: \"0 13px\",\n    fontSize: \"18px\",\n    backgroundColor: \"#eceff1\",\n    fontFamily: \"Roboto\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    \"& a\": {\n      textDecoration: \"none\",\n      color: \"black\"\n    }\n  },\n  slider: {\n    width: \"340px\",\n    margin: \"0 10px\",\n    display: \"inline-block\"\n  },\n  rcSliderTrack: {\n    backgroundColor: \"transparent\"\n  },\n  rcSliderRail: {\n    height: \"8px\"\n  },\n  selectContainer: {\n    marginLeft: \"auto\",\n    marginRight: \"1rem\"\n  }\n};\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormatChange = evt => {\n      this.setState({\n        format: evt.target.value,\n        open: true\n      }, () => this.props.handleChange(this.state.format));\n    };\n\n    this.closeSnackbar = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      format: \"hex\",\n      open: false\n    };\n  }\n\n  render() {\n    const {\n      level,\n      changeLevel,\n      showingAllColors,\n      classes\n    } = this.props;\n    const {\n      format\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"header\", {\n      className: classes.navbar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.logo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"reactcolorpicker\")), showingAllColors && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Level: \", level), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.slider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Slider, {\n      defaultValue: level,\n      min: 100,\n      max: 900,\n      step: 100,\n      onAfterChange: changeLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.selectContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      value: format,\n      onChange: this.handleFormatChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"hex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"HEX - #ffffff\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"rgb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"RGB - rgb(255,255,255)\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"rgba\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"RGBA - rgba(255,255,255,1.0)\"))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      onClose: this.closeSnackbar,\n      open: this.state.open,\n      autoHideDuration: 3000,\n      message: /*#__PURE__*/React.createElement(\"span\", {\n        id: \"message-id\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 34\n        }\n      }, \"Format Changed To \", format.toUpperCase()),\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      action: [/*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.closeSnackbar,\n        color: \"inherit\",\n        key: \"close\",\n        \"aria-label\": \"close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }))],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nNavbar.defaultProps = {\n  showingAllColors: true\n};\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/Navbar.js"],"names":["React","Component","Slider","Select","MenuItem","Snackbar","IconButton","CloseIcon","Link","withStyles","styles","navbar","display","alignItems","justifyContent","height","logo","marginRight","padding","fontSize","backgroundColor","fontFamily","textDecoration","color","slider","width","margin","rcSliderTrack","rcSliderRail","selectContainer","marginLeft","Navbar","constructor","props","handleFormatChange","evt","setState","format","target","value","open","handleChange","state","closeSnackbar","render","level","changeLevel","showingAllColors","classes","vertical","horizontal","toUpperCase","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Slider from \"rc-slider\";\r\nimport 'rc-slider/assets/index.css';\r\nimport './Navbar.css';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/styles\";\r\n//import styles from \"./styles/NavbarStyles\"\r\n\r\nconst styles = {\r\n    navbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        height: \"6vh\",\r\n    },\r\n    logo: {\r\n        marginRight: \"50px\",\r\n        padding: \"0 13px\",\r\n        fontSize: \"18px\",\r\n        backgroundColor: \"#eceff1\",\r\n        fontFamily: \"Roboto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        \"& a\": {\r\n            textDecoration: \"none\",\r\n            color: \"black\",\r\n        }\r\n    },    \r\n    slider: {\r\n        width: \"340px\",\r\n        margin: \"0 10px\",\r\n        display: \"inline-block\"\r\n    },\r\n    rcSliderTrack: {\r\n        backgroundColor: \"transparent\"\r\n    },\r\n    rcSliderRail: {\r\n        height: \"8px\"\r\n    },\r\n    selectContainer: {\r\n        marginLeft: \"auto\",\r\n        marginRight: \"1rem\"\r\n    }\r\n}\r\n\r\nclass Navbar extends Component {\r\n    static defaultProps = {\r\n        showingAllColors: true\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            format: \"hex\",\r\n            open: false\r\n        }\r\n    }\r\n    handleFormatChange = (evt) =>{\r\n        this.setState({format: evt.target.value, open: true},\r\n            ()=>this.props.handleChange(this.state.format));\r\n    }\r\n    closeSnackbar = ()=>{\r\n        this.setState({open: false})\r\n    }\r\n    render() {\r\n        const {level, changeLevel, showingAllColors, classes} = this.props;\r\n        const {format} = this.state;\r\n        return (\r\n            <header className={classes.navbar}>\r\n                <div className={classes.logo}>\r\n                    <Link to=\"/\">reactcolorpicker</Link>\r\n                </div>\r\n                {showingAllColors && (\r\n                    <div>\r\n                        <span>Level: {level}</span>\r\n                        <div className={classes.slider}>\r\n                            <Slider defaultValue={level} \r\n                                    min={100} \r\n                                    max={900} \r\n                                    step={100}\r\n                                    onAfterChange={changeLevel}/>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div className={classes.selectContainer}>\r\n                    <Select value={format} onChange={this.handleFormatChange}>\r\n                        <MenuItem value=\"hex\">HEX - #ffffff</MenuItem>\r\n                        <MenuItem value=\"rgb\">RGB - rgb(255,255,255)</MenuItem>\r\n                        <MenuItem value=\"rgba\">RGBA - rgba(255,255,255,1.0)</MenuItem>\r\n                    </Select>\r\n                </div>\r\n                <Snackbar anchorOrigin={{ vertical: \"bottom\", horizontal: \"left\" }} \r\n                        onClose={this.closeSnackbar}\r\n                        open={this.state.open} \r\n                        autoHideDuration={3000}\r\n                        message={<span id=\"message-id\">Format Changed To {format.toUpperCase()}</span>}\r\n                        ContentProps={{\r\n                            \"aria-describedby\": \"message-id\"\r\n                        }}\r\n                        action={[\r\n                            <IconButton onClick={this.closeSnackbar} \r\n                                        color=\"inherit\" \r\n                                        key=\"close\" \r\n                                        aria-label=\"close\">\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                        ]}\r\n                />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Navbar);"]},"metadata":{},"sourceType":"module"}