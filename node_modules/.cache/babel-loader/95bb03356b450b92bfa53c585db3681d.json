{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport './styles/page.css';\nimport PaletteList from './PaletteList';\nimport Palette from \"./Palette\";\nimport seedColors from \"./seedColors\";\nimport NewPaletteForm from './NewPaletteForm';\nimport { generatePalette } from \"./colorHelpers\";\nimport SingleColorPalette from './SingleColorPalette';\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport Page from \"./page\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deletePalette = id => {\n      this.setState({\n        palettes: this.state.palettes.filter(p => p.id !== id)\n      }, this.syncLocalStorage);\n    };\n\n    this.savePalette = newPalette => {\n      this.setState({\n        palettes: [...this.state.palettes, newPalette]\n      }, this.syncLocalStorage);\n    };\n\n    this.syncLocalStorage = () => {\n      window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n    };\n\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state = {\n      palettes: savedPalettes || seedColors\n    };\n    this.findPalette = this.findPalette.bind(this);\n  }\n\n  findPalette(id) {\n    return this.state.palettes.find(function (palette) {\n      return palette.id === id;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Route, {\n      render: ({\n        location\n      }) => /*#__PURE__*/React.createElement(TransitionGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        key: location.key,\n        classNames: \"page\",\n        timeout: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        location: location,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/palette/new\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 43\n          }\n        }, /*#__PURE__*/React.createElement(NewPaletteForm, Object.assign({\n          maxColors: 20,\n          savePalette: this.savePalette,\n          palettes: this.state.palettes\n        }, routeProps, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 47\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(PaletteList, Object.assign({\n          palettes: this.state.palettes\n        }, routeProps, {\n          deletePalette: this.deletePalette,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 47\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:id\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Palette, {\n          palette: generatePalette(this.findPalette(routeProps.match.params.id)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 27\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/palette/:paletteId/:colorId\",\n        render: routeProps => /*#__PURE__*/React.createElement(Page, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(SingleColorPalette, {\n          colorId: routeProps.match.params.colorId,\n          palette: generatePalette(this.findPalette(routeProps.match.params.paletteId)),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/App.js"],"names":["React","Component","Route","Switch","PaletteList","Palette","seedColors","NewPaletteForm","generatePalette","SingleColorPalette","TransitionGroup","CSSTransition","Page","App","constructor","props","deletePalette","id","setState","palettes","state","filter","p","syncLocalStorage","savePalette","newPalette","window","localStorage","setItem","JSON","stringify","savedPalettes","parse","getItem","findPalette","bind","find","palette","render","location","key","routeProps","match","params","colorId","paletteId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Route, Switch} from \"react-router-dom\";\nimport './styles/page.css';\nimport PaletteList from './PaletteList';\nimport Palette from \"./Palette\";\nimport seedColors from \"./seedColors\";\nimport NewPaletteForm from './NewPaletteForm';\nimport {generatePalette} from \"./colorHelpers\";\nimport SingleColorPalette from './SingleColorPalette';\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport Page from \"./page\"\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    const savedPalettes = JSON.parse(window.localStorage.getItem(\"palettes\"));\n    this.state={\n      palettes: savedPalettes || seedColors\n    }\n    this.findPalette = this.findPalette.bind(this)\n  }\n  deletePalette = (id)=>{\n    this.setState({palettes: this.state.palettes.filter(p=>p.id!==id)},this.syncLocalStorage);\n  }\n  findPalette(id){\n    return this.state.palettes.find(function(palette){\n      return palette.id===id\n    })\n  }\n  savePalette = newPalette =>{\n    this.setState({palettes: [...this.state.palettes, newPalette]},this.syncLocalStorage)\n  }\n  syncLocalStorage = () =>{\n    window.localStorage.setItem(\"palettes\", JSON.stringify(this.state.palettes));\n  }\n  render(){\n    return (\n      <Route render={({location}) => (\n        <TransitionGroup>\n          <CSSTransition key={location.key} classNames='page' timeout={200}>\n            <Switch location={location}>\n              <Route exact\n                    path=\"/palette/new\"\n                    render={(routeProps)=><Page>\n                                              <NewPaletteForm \n                                              maxColors={20}\n                                              savePalette={this.savePalette}\n                                              palettes={this.state.palettes} \n                                              {...routeProps}/>\n                                          </Page>\n              }/>\n              <Route exact \n                      path=\"/\" \n                      render={(routeProps)=><Page>\n                                              <PaletteList \n                                                palettes={this.state.palettes} \n                                                {...routeProps} \n                                                deletePalette={this.deletePalette}/>\n                                            </Page>\n              }/>\n              <Route exact \n                      path=\"/palette/:id\" \n                      render={(routeProps)=>\n                        <Page>\n                          <Palette palette={generatePalette(this.findPalette(routeProps.match.params.id))}/>\n                        </Page>\n              }/>\n              <Route exact \n                      path=\"/palette/:paletteId/:colorId\" \n                      render={(routeProps)=>\n                      <Page>\n                        <SingleColorPalette \n                              colorId={routeProps.match.params.colorId}\n                              palette={generatePalette(this.findPalette(routeProps.match.params.paletteId))}/>\n                      </Page>\n              }/>\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n      )}/>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}