{"ast":null,"code":"import { DRAWER_WIDTH } from \"../constants\";\nimport sizes from \"./sizes\";\nconst drawerWidth = DRAWER_WIDTH;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    height: \"64px\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20\n  },\n  navBtns: {\n    marginRight: \"1rem\",\n    textAlign: \"right\",\n    width: \"200px\",\n    [sizes.down(\"xsButtons\")]: {\n      marginRight: 0,\n      width: \"150px\"\n    }\n  },\n  button: {\n    margin: \"0 0.5rem\",\n    width: \"100%\",\n    whiteSpace: \"nowrap\"\n  },\n  link: {\n    textDecoration: \"none\"\n  },\n  buttonRoot2: {\n    margin: \"0 5px\",\n    whiteSpace: \"nowrap\",\n    [sizes.down(\"xsButtonsSmall\")]: {\n      minWidth: \"50px\",\n      padding: \"5px\",\n      fontSize: \"10px\"\n    }\n  },\n  buttonRoot: {\n    margin: \"0 5px\",\n    whiteSpace: \"nowrap\",\n    [sizes.down(\"xsButtonsComplete\")]: {\n      minWidth: \"50px\",\n      padding: \"5px\",\n      margin: \"0 5px\",\n      fontSize: \"10px\"\n    }\n  }\n});\n\nexport default styles;","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/styles/PaletteFormNavStyles.js"],"names":["DRAWER_WIDTH","sizes","drawerWidth","styles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","flexDirection","justifyContent","alignItems","height","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","navBtns","textAlign","down","button","margin","whiteSpace","link","textDecoration","buttonRoot2","minWidth","padding","fontSize","buttonRoot"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,MAAMC,WAAW,GAAGF,YAApB;;AAEA,MAAMG,MAAM,GAAGC,KAAK,KAAK;AACrBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE;AADP,GADe;AAIrBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBC,KADuB;AAExDC,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BC;AAFmB,KAA9C,CADR;AAKJC,IAAAA,aAAa,EAAE,KALX;AAMJC,IAAAA,cAAc,EAAE,eANZ;AAOJC,IAAAA,UAAU,EAAE,QAPR;AAQJC,IAAAA,MAAM,EAAE;AARJ,GAJa;AAcnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAG,eAAclB,WAAY,KADvB;AAEXmB,IAAAA,UAAU,EAAEnB,WAFD;AAGXM,IAAAA,UAAU,EAAEJ,KAAK,CAACK,WAAN,CAAkBC,MAAlB,CAAyB,CAAC,QAAD,EAAW,OAAX,CAAzB,EAA8C;AACxDC,MAAAA,MAAM,EAAEP,KAAK,CAACK,WAAN,CAAkBE,MAAlB,CAAyBW,OADuB;AAExDT,MAAAA,QAAQ,EAAET,KAAK,CAACK,WAAN,CAAkBI,QAAlB,CAA2BU;AAFmB,KAA9C;AAHD,GAdM;AAsBnBC,EAAAA,UAAU,EAAE;AACVH,IAAAA,UAAU,EAAE,EADF;AAEVI,IAAAA,WAAW,EAAE;AAFH,GAtBO;AA0BnBC,EAAAA,OAAO,EAAE;AACPD,IAAAA,WAAW,EAAE,MADN;AAEPE,IAAAA,SAAS,EAAE,OAFJ;AAGPP,IAAAA,KAAK,EAAE,OAHA;AAIP,KAACnB,KAAK,CAAC2B,IAAN,CAAW,WAAX,CAAD,GAA2B;AACzBH,MAAAA,WAAW,EAAE,CADY;AAEzBL,MAAAA,KAAK,EAAE;AAFkB;AAJpB,GA1BU;AAmCnBS,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,UADF;AAENV,IAAAA,KAAK,EAAE,MAFD;AAGNW,IAAAA,UAAU,EAAE;AAHN,GAnCW;AAwCnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,cAAc,EAAE;AADZ,GAxCa;AA2CnBC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,MAAM,EAAE,OADG;AAEXC,IAAAA,UAAU,EAAE,QAFD;AAGX,KAAC9B,KAAK,CAAC2B,IAAN,CAAW,gBAAX,CAAD,GAAgC;AAC9BO,MAAAA,QAAQ,EAAE,MADoB;AAE9BC,MAAAA,OAAO,EAAE,KAFqB;AAG9BC,MAAAA,QAAQ,EAAE;AAHoB;AAHrB,GA3CM;AAoDnBC,EAAAA,UAAU,EAAE;AACVR,IAAAA,MAAM,EAAE,OADE;AAEVC,IAAAA,UAAU,EAAE,QAFF;AAGV,KAAC9B,KAAK,CAAC2B,IAAN,CAAW,mBAAX,CAAD,GAAmC;AACjCO,MAAAA,QAAQ,EAAE,MADuB;AAEjCC,MAAAA,OAAO,EAAE,KAFwB;AAGjCN,MAAAA,MAAM,EAAE,OAHyB;AAIjCO,MAAAA,QAAQ,EAAE;AAJuB;AAHzB;AApDO,CAAL,CAApB;;AAgEA,eAAelC,MAAf","sourcesContent":["import {DRAWER_WIDTH} from \"../constants\"\r\nimport sizes from \"./sizes\"\r\n\r\nconst drawerWidth = DRAWER_WIDTH;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        height: \"64px\"\r\n      },\r\n      appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create([\"margin\", \"width\"], {\r\n          easing: theme.transitions.easing.easeOut,\r\n          duration: theme.transitions.duration.enteringScreen\r\n        })\r\n      },\r\n      menuButton: {\r\n        marginLeft: 12,\r\n        marginRight: 20\r\n      },\r\n      navBtns: {\r\n        marginRight: \"1rem\",\r\n        textAlign: \"right\",\r\n        width: \"200px\",\r\n        [sizes.down(\"xsButtons\")]: {\r\n          marginRight: 0,\r\n          width: \"150px\",\r\n      }\r\n      },\r\n      button: {\r\n        margin: \"0 0.5rem\",\r\n        width: \"100%\",\r\n        whiteSpace: \"nowrap\",\r\n      },\r\n      link: {\r\n        textDecoration: \"none\"\r\n      },\r\n      buttonRoot2: {\r\n        margin: \"0 5px\",\r\n        whiteSpace: \"nowrap\",\r\n        [sizes.down(\"xsButtonsSmall\")]: {\r\n          minWidth: \"50px\",\r\n          padding: \"5px\",\r\n          fontSize: \"10px\"\r\n        }\r\n      },\r\n      buttonRoot: {\r\n        margin: \"0 5px\",\r\n        whiteSpace: \"nowrap\",\r\n        [sizes.down(\"xsButtonsComplete\")]: {\r\n          minWidth: \"50px\",\r\n          padding: \"5px\",\r\n          margin: \"0 5px\",\r\n          fontSize: \"10px\"\r\n        }\r\n      }\r\n});\r\n\r\nexport default styles;"]},"metadata":{},"sourceType":"module"}