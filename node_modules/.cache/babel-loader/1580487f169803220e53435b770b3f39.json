{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Public\\\\WEB DEVELOPER\\\\REACT\\\\react-colors\\\\src\\\\colorBox.js\";\nimport React, { Component } from 'react';\nimport './colorBox.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Link } from \"react-router-dom\";\nimport chroma from \"chroma-js\";\nimport { withStyles } from \"@material-ui/styles\";\nconst styles = {\n  copyText: {\n    color: \"purple\"\n  }\n};\n\nclass colorBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeCopyState = () => {\n      this.setState({\n        copied: true\n      }, () => {\n        setTimeout(() => this.setState({\n          copied: false\n        }), 1500);\n        this.props.deactivateOverflow(2200);\n      });\n    };\n\n    this.state = {\n      copied: false\n    };\n  }\n\n  render() {\n    const {\n      name,\n      background,\n      paletteId,\n      colorId,\n      showLink\n    } = this.props;\n    const isDarkColor = chroma(background).luminance() <= 0.08;\n    const isLightColor = chroma(background).luminance() >= 0.5;\n    return /*#__PURE__*/React.createElement(CopyToClipboard, {\n      text: background,\n      onCopy: this.changeCopyState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ColorBox\",\n      style: {\n        background: background\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background\n      },\n      className: `copy-overlay ${this.state.copied && \"show\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: `copy-msg ${this.state.copied && \"show\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"Copied!\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: isLightColor ? \"dark-text\" : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, this.props.background)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"copy-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: isDarkColor ? \"light-text\" : undefined,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, name)), /*#__PURE__*/React.createElement(\"button\", {\n      className: `copy-button ${isLightColor ? \"dark-text\" : undefined}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, \"Copy\")), showLink && /*#__PURE__*/React.createElement(Link, {\n      to: `/palette/${paletteId}/${colorId}`,\n      onClick: e => e.stopPropagation(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `see-more ${isLightColor ? \"dark-text\" : undefined}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    }, \"More\"))));\n  }\n\n}\n\ncolorBox.defaultProps = {\n  showLink: true\n};\nexport default withStyles(style)(colorBox);","map":{"version":3,"sources":["C:/Users/Public/WEB DEVELOPER/REACT/react-colors/src/colorBox.js"],"names":["React","Component","CopyToClipboard","Link","chroma","withStyles","styles","copyText","color","colorBox","constructor","props","changeCopyState","setState","copied","setTimeout","deactivateOverflow","state","render","name","background","paletteId","colorId","showLink","isDarkColor","luminance","isLightColor","undefined","e","stopPropagation","defaultProps","style"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport  './colorBox.css';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport {Link} from \"react-router-dom\"\r\nimport chroma from \"chroma-js\"\r\nimport { withStyles } from \"@material-ui/styles\";\r\n\r\nconst styles = {\r\n    copyText: {\r\n        color: \"purple\"\r\n    }\r\n}\r\n\r\nclass colorBox extends Component {\r\n    static defaultProps = {\r\n        showLink: true\r\n    }\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            copied: false\r\n        }\r\n    }\r\n    changeCopyState = () => {\r\n        this.setState({\r\n            copied: true\r\n        }, () => {\r\n            setTimeout(()=>this.setState({copied: false}),1500);\r\n            this.props.deactivateOverflow(2200);\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const {name,background,paletteId,colorId,showLink} = this.props;\r\n        const isDarkColor = chroma(background).luminance() <= 0.08;\r\n        const isLightColor = chroma(background).luminance() >= 0.5;\r\n        return (\r\n            <CopyToClipboard text={background} onCopy={this.changeCopyState}>\r\n                <div className=\"ColorBox\" style={{background: background}}>\r\n                <div style={{background}} className={`copy-overlay ${this.state.copied&&\"show\"}`}/>\r\n                <div className={`copy-msg ${this.state.copied&&\"show\"}`}>\r\n                    <h1>Copied!</h1>\r\n                    <p className={isLightColor?\"dark-text\":undefined}>{this.props.background}</p>\r\n                </div>\r\n                    <div className=\"copy-container\">\r\n                        <div className=\"box-content\">\r\n                            <span className={isDarkColor?\"light-text\":undefined}>{name}</span>\r\n                        </div>\r\n                        <button className={`copy-button ${isLightColor?\"dark-text\":undefined}`}>Copy</button>\r\n                    </div>\r\n                    {showLink && \r\n                        <Link to={`/palette/${paletteId}/${colorId}`} onClick={(e) => e.stopPropagation()}> \r\n                            <span className={`see-more ${isLightColor?\"dark-text\":undefined}`}>More</span>\r\n                        </Link>    \r\n                    }\r\n                </div>\r\n            </CopyToClipboard>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(style)(colorBox);"]},"metadata":{},"sourceType":"module"}